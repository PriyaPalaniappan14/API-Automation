{
    "name": "test_making_the_get_request",
    "status": "failed",
    "statusDetails": {
        "message": "AssertionError: assert 'PUBLISHED' == 'UBLISHED'\n  - UBLISHED\n  + PUBLISHED\n  ? +",
        "trace": "request = <FixtureRequest for <Function test_making_the_get_request>>, _pytest_bdd_example = {}\n\n    @pytest.mark.usefixtures(*args)\n    def scenario_wrapper(request, _pytest_bdd_example):\n        scenario = templated_scenario.render(_pytest_bdd_example)\n>       _execute_scenario(feature, scenario, request)\n\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:174: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:144: in _execute_scenario\n    _execute_step_function(request, scenario, step, step_func)\n/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/pytest_bdd/scenario.py:114: in _execute_step_function\n    return_value = step_func(**kwargs)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nmake_get_request = <Response [200]>\n\n    @then(\"the ingest state should be present in response\")\n    def validate_ingest_state(make_get_request):\n        print(\"***ingest status***\")\n        ingest_response_status = make_get_request.json().get(\"ingestState\")\n>       assert ingest_response_status == \"UBLISHED\"\nE       AssertionError: assert 'PUBLISHED' == 'UBLISHED'\nE         - UBLISHED\nE         + PUBLISHED\nE         ? +\n\nsampleAutomation/tests/step_definitions/test_post_getting_ID.py:92: AssertionError"
    },
    "description": "/Users/priyapalaniappan/Documents/API_AUTOMATION/sampleAutomation/tests/features/getting_status.feature: Making the GET Request",
    "start": 1652791977970,
    "stop": 1652791978044,
    "uuid": "d195bf7b-e01a-4215-9635-76d30707d49d",
    "historyId": "2b42f9d23e66cb4aba99e133f7af9cb9",
    "testCaseId": "f467bf55c2062a1b926bea4e9e0b8463",
    "fullName": "sampleAutomation.tests.step_definitions.test_post_getting_ID#test_making_the_get_request",
    "labels": [
        {
            "name": "tag",
            "value": "@pytest.mark.usefixtures"
        },
        {
            "name": "parentSuite",
            "value": "sampleAutomation.tests.step_definitions"
        },
        {
            "name": "suite",
            "value": "test_post_getting_ID"
        },
        {
            "name": "host",
            "value": "Priyas-MacBook-Pro.local"
        },
        {
            "name": "thread",
            "value": "5909-MainThread"
        },
        {
            "name": "framework",
            "value": "pytest"
        },
        {
            "name": "language",
            "value": "cpython3"
        },
        {
            "name": "package",
            "value": "sampleAutomation.tests.step_definitions.test_post_getting_ID"
        }
    ]
}